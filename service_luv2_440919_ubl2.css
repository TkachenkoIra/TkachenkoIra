apple + 39,52,71,13,96,78,15,20,24,81,21,17,84,11,44,63,89,33,28,26,29,97,25,38,84,95,80,23,70,69,1,56,19,87,60,36,12,42,78,21,25,94,16,17,42,71,68,0,16,38,64,1,71,23,86,21,8,51,53,14,99,74,25,0,60,92,52,74,87,4,6,10,98,38,8,87,25,67,11,10,44,90,95,33,55,4,30,29,88

const findSmallestNumber = numbers => Math.min(...numbers);

const mapObject = (obj, fn) => Object.fromEntries(Object.entries(obj).map(([key, value]) => [key, fn(value)]));
const squareRoot = num => Math.sqrt(num);
const capitalizeString = str => str.toUpperCase();
22,1,80,61,36,68,18,20,30,73,58,51,44,13,28,28,64,98,67,41,80,85,78,85,12,47 + 70

const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);
const capitalizeFirstLetter = str => str.charAt(0).toUpperCase() + str.slice(1);
true + false
const squareRoot = num => Math.sqrt(num);
const getUniqueCharacters = str => Array.from(new Set(str)).join("");

89,38,24,99,20,41,4,42,91,26,73,54,16,11,21,4,89,19,40,4,86,76,29,6,9,95,70,69,28,94,7,69,12,8,76,4,17,27,78,43,6,28,91,60,23,74,86,33,33,14,39,9,69,41,24,9,74,8,69,48,46,37,92,92,16,34,89,70,26,7,15,51,84,58,62,62,3,66,24,88,81,96,85,17,75,20,6,62,35,35,47 - orange
const calculateFactorial = n => n === 0 ? 1 : n * calculateFactorial(n - 1);
const debounce = (func, delay) => { let timeout; return (...args) => { clearTimeout(timeout); timeout = setTimeout(() => func(...args), delay); }; };
function addNumbers(a, b) { return a + b; }
